{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/Order/Order.module.css"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientsOutput","map","ig","style","textTransform","display","margin","padding","border","key","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","Spinner","loading","orders","fetchedOrders","index","currentOrder","id","Component","connect","state","error","auth","dispatch","actions","withErrorHandler","axios","module","exports"],"mappings":"gNAqCeA,EAlCD,SAACC,GAEX,IAAMC,EAAc,GAEpB,IAAI,IAAIC,KAAkBF,EAAMC,YAC5BA,EAAYE,KACR,CACIC,KAAKF,EACLG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAoBL,EAAYM,KAAI,SAAAC,GAAE,OACxC,0BACIC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,QAAS,MACTC,OAAQ,kBAEZC,IAAKP,EAAGJ,MAAOI,EAAGJ,KARtB,KAQ8BI,EAAGH,OARjC,QAYJ,OACI,yBAAKW,UAAWC,IAAQC,OACpB,2CAAiBZ,GACjB,sCAAW,uCAAaa,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,O,gCCvBrEC,E,kLAGEC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,U,+BAItD,IAAI5B,EAAQ,kBAAC6B,EAAA,EAAD,MAEZ,IAAIJ,KAAKxB,MAAM6B,QAAS,CACpB,IAAMC,EAAS,GACTC,EAAgBP,KAAKxB,MAAM8B,OACjC,IAAI,IAAIE,KAASD,EAAe,CAC5B,IAAME,EAAeF,EAAcC,GACnCF,EAAO3B,KAAK,kBAACe,EAAD,CACIH,IAAKkB,EAAaC,GAClBjC,YAAagC,EAAahC,YAC1BoB,MAAOY,EAAaZ,SAExCtB,EAAQ,6BACK+B,GAIjB,OAAO/B,M,GAxBMoC,aA4CNC,uBAhBS,SAACC,GACrB,MAAO,CACHP,OAAQO,EAAMtC,MAAM+B,OACpBD,QAASQ,EAAMtC,MAAM8B,QACrBS,MAAOD,EAAMtC,MAAMuC,MACnBZ,MAAOW,EAAME,KAAKb,MAClBC,OAAQU,EAAME,KAAKZ,WAIA,SAACa,GACxB,MAAO,CACHf,cAAe,SAACC,EAAOC,GAAR,OAAmBa,EAASC,IAAoBf,EAAOC,QAI/DS,CAA6CM,YAAiBnB,EAAOoB,O,mBCpDpFC,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/5.8d735d4d.chunk.js","sourcesContent":["import React from 'react'\r\nimport classes from './Order.module.css'\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n\r\n    for(let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name:ingredientName, \r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        )\r\n    }\r\n\r\n    const ingredientsOutput = ingredients.map(ig => \r\n        <span \r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                padding: '5px',\r\n                border: '1px solid #ccc'\r\n            }}\r\n            key={ig.name}>{ig.name} [{ig.amount}]\r\n        </span>    \r\n    )\r\n\r\n    return(\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientsOutput}</p>\r\n            <p>Price - <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order;","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/ui/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId)\r\n    }\r\n\r\n    render() {\r\n        let order = <Spinner />;\r\n\r\n        if(!this.props.loading) {\r\n            const orders = [];\r\n            const fetchedOrders = this.props.orders;\r\n            for(let index in fetchedOrders) {\r\n                const currentOrder = fetchedOrders[index];\r\n                orders.push(<Order \r\n                                key={currentOrder.id} \r\n                                ingredients={currentOrder.ingredients}\r\n                                price={currentOrder.price} />);\r\n            }\r\n            order = <div>\r\n                        {orders}\r\n                    </div>\r\n        }\r\n\r\n        return order;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        error: state.order.error,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders,axios));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__26lPo\"};"],"sourceRoot":""}